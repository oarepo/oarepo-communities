import React from "react";
import { Modal, Button, Form, Icon, Message } from "semantic-ui-react";
import { i18next } from "@translations/oarepo_communities";
import {
  useConfirmationModal,
  BaseForm,
  ArrayFieldItem,
  useShowEmptyValue,
} from "@js/oarepo_ui";
import { ArrayField, SelectField, TextField } from "react-invenio-forms";
import { Formik } from "formik";

export const CommunityInvitation = ({
  onSubmit,
  error,
  rolesCanInvite,
  groupsEnabled,
  community,
}) => {
  const [email, setEmail] = React.useState("");
  const [loading, setLoading] = React.useState(false);
  const { isOpen, close, open } = useConfirmationModal();
  const handleSubmit = async () => {
    setLoading(true);
    await onSubmit(email);
    setLoading(false);
  };

  return (
    <Formik
      initialValues={{}}
      validateOnChange={true}
      validateOnBlur={true}
      enableReinitialize={true}
    >
      <Modal
        closeIcon
        open={isOpen}
        onClose={close}
        onOpen={open}
        trigger={
          <Button
            className="fluid-responsive"
            content={i18next.t("Invite...")}
            positive
            fluid
            compact
            icon="user plus"
            labelPosition="left"
            aria-expanded={isOpen}
            aria-haspopup="dialog"
          />
        }
      >
        <Modal.Header>Invite user to the community</Modal.Header>
        <Modal.Content>
          <Form error={!!error}>
            <ArrayField
              addButtonLabel={i18next.t("Add invitee")}
              //   defaultNewValue={
              //     prefillLanguageWithDefaultLocale
              //       ? getNewValue(initialValueObj)
              //       : defaultNewValue
              //   }
              fieldPath={"invitees"}
              addButtonClassName="array-field-add-button"
            >
              {({ arrayHelpers, indexPath }) => {
                const fieldPathPrefix = `invitees.${indexPath}`;
                return (
                  <ArrayFieldItem
                    indexPath={indexPath}
                    arrayHelpers={arrayHelpers}
                    fieldPathPrefix={fieldPathPrefix}
                  >
                    <TextField
                      fieldPath={`${fieldPathPrefix}.email`}
                      label="Email"
                    />
                    <TextField
                      fieldPath={`${fieldPathPrefix}.firstName`}
                      label="First name"
                    />
                    <TextField
                      fieldPath={`${fieldPathPrefix}.lastName`}
                      label="Last name"
                    />
                  </ArrayFieldItem>
                );
              }}
            </ArrayField>
            <Message error header="Error" content={error} />
          </Form>
          <div>dwadwa</div>
        </Modal.Content>
        <Modal.Actions>
          <Button onClick={close}>
            <Icon name="remove" /> Cancel
          </Button>
          <Button primary onClick={handleSubmit} loading={loading}>
            <Icon name="checkmark" /> Invite
          </Button>
        </Modal.Actions>
      </Modal>
    </Formik>
  );
};
