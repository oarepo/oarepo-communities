#
# This file is part of Invenio.
# Copyright (C) 2016-2018 CERN.
#
# Invenio is free software; you can redistribute it and/or modify it
# under the terms of the MIT License; see LICENSE file for more details.

"""Create community workflows table."""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "fdeb1af86021"
down_revision = "233d86562e3c"
branch_labels = ()
depends_on = None


def upgrade():
    """Upgrade database."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "community_scenario_version",
        sa.Column(
            "community_id",
            sqlalchemy_utils.types.uuid.UUIDType(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("workflow", sa.String(), autoincrement=False, nullable=True),
        sa.Column(
            "transaction_id", sa.BigInteger(), autoincrement=False, nullable=False
        ),
        sa.Column("end_transaction_id", sa.BigInteger(), nullable=True),
        sa.Column("operation_type", sa.SmallInteger(), nullable=False),
        sa.PrimaryKeyConstraint(
            "community_id", "transaction_id", name=op.f("pk_community_scenario_version")
        ),
    )
    op.create_index(
        op.f("ix_community_scenario_version_end_transaction_id"),
        "community_scenario_version",
        ["end_transaction_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_community_scenario_version_operation_type"),
        "community_scenario_version",
        ["operation_type"],
        unique=False,
    )
    op.create_index(
        op.f("ix_community_scenario_version_transaction_id"),
        "community_scenario_version",
        ["transaction_id"],
        unique=False,
    )
    op.create_table(
        "community_scenario",
        sa.Column(
            "community_id", sqlalchemy_utils.types.uuid.UUIDType(), nullable=False
        ),
        sa.Column("workflow", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["community_id"],
            ["communities_metadata.id"],
            name=op.f("fk_community_scenario_community_id_communities_metadata"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("community_id", name=op.f("pk_community_scenario")),
    )
    op.drop_index("ix_uq_partial_files_object_is_head", table_name="files_object")
    # ### end Alembic commands ###


def downgrade():
    """Downgrade database."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(
        "ix_uq_partial_files_object_is_head",
        "files_object",
        ["bucket_id", "key"],
        unique=False,
    )
    op.drop_table("community_scenario")
    op.drop_index(
        op.f("ix_community_scenario_version_transaction_id"),
        table_name="community_scenario_version",
    )
    op.drop_index(
        op.f("ix_community_scenario_version_operation_type"),
        table_name="community_scenario_version",
    )
    op.drop_index(
        op.f("ix_community_scenario_version_end_transaction_id"),
        table_name="community_scenario_version",
    )
    op.drop_table("community_scenario_version")
    # ### end Alembic commands ###
